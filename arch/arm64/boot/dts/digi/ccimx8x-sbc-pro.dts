/*
 * Copyright 2018, Digi International Inc.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/dts-v1/;

/* i.MX8QXP CPU */
#include "../freescale/fsl-imx8qxp.dtsi"
/* Digi ConnectCore 8X (non-WiFi variant) */
#include "ccimx8x.dtsi"
/* Digi ConnectCore 8X SBC Pro */
#include "ccimx8x-sbc-pro.dtsi"

&dpr1_channel1 {
	status = "okay";
};

&dpr1_channel2 {
	status = "okay";
};

&dpr1_channel3 {
	status = "okay";
};

&dpr2_channel1 {
	status = "okay";
};

&dpr2_channel2 {
	status = "okay";
};

&dpr2_channel3 {
	status = "okay";
};

&dpu1 {
	status = "okay";
};

&fec1 {
	status = "okay";
};

&fec2 {
	status = "okay";
};

/*
 * CAN0
 * Conflicts with LPUART0 RTS/CTS lines.
 * Before enabling the port you need to configure
 * lpuart0 node as 2 wires.
 */
&flexcan1 {
	status = "disabled";
};

/* CAN1 on expansion header */
&flexcan2 {
	status = "okay";
};

/*
 * CAN2 on expansion header.
 * Conflicts with LPUART3 RX/TX lines.
 */
&flexcan3 {
	status = "okay";
};

&gpu_3d0 {
	status = "okay";
};

/*
 * I2C3 connected to Audio codec and USB 3.0 PD PHY.
 * Also available on:
 * - Expansion header
 * - PCIe connector
 * - Parallel Camera connector
 */
&i2c3 {
	status = "okay";
};

/* MIPI-CSI0 I2C available on MIPI Camera connector */
&i2c0_csi0 {
	status = "okay";
};

/* MIPI-DSI0 I2C available on LVDS0 connector */
&i2c0_mipi_lvds0 {
	status = "okay";
};

&imx8_gpu_ss {
	status = "okay";
};

&intmux_cm40 {
	status = "okay";
};

&isi_0 {
	status = "okay";
};

&isi_1 {
	status = "okay";
};

&isi_2 {
	status = "okay";
};

&isi_3 {
	status = "okay";
};

&ldb1 {
	status = "okay";
};

&ldb1_phy {
	status = "okay";
};

&lvds0 {
	status = "okay";
};

/*
 * On the CC8X SBC, an inconsistent reset sequence makes
 * the Goodix display's touch controller respond to two I2C
 * addresses: 0x14 and 0x5D. To make sure the touchscreen
 * works every time, the touch controller's description must
 * be duplicated for both addresses.
 */
&lvds0_goodix_touch1 {
	status = "okay";
};

&lvds0_goodix_touch2 {
	status = "okay";
};

/*
 * Uncomment to enable display support on the 2nd video interface.
 */
///* MIPI-DSI1 I2C available on LVDS1 connector */
//&i2c0_mipi_lvds1 {
//	status = "okay";
//};
//
//&ldb2 {
//	status = "okay";
//};
//
//&ldb2_phy {
//	status = "okay";
//};
//
//&lvds1 {
//	status = "okay";
//};
//
//&lvds1_goodix_touch1 {
//	status = "okay";
//};
//
//&lvds1_goodix_touch2 {
//	status = "okay";
//};
//

/* LPSPI0 on expansion header */
&lpspi0 {
	status = "okay";

	/*
	 * Add your slave devices here. Next is an example of spidev.
	 * Expect a harmless kernel warning if you enable spidev as slave.
	 */
	spidev@0 {
		compatible = "spidev";
		spi-max-frequency = <4000000>;
		reg = <0>;
	};
};

/* LPUART0 on expansion header */
&lpuart0 {
	/* RTS/CTS lines multiplexed with CAN0 */
	pinctrl-0 = <&pinctrl_lpuart0_4wires>;
	/* Comment the line above and uncomment the next one to use 2-wires */
	//pinctrl-0 = <&pinctrl_lpuart0_2wires>;
	status = "okay";
};

/* Console */
&lpuart2 {
	status = "okay";
};

/*
 * LPUART3 on expansion header.
 * Conflicts with CAN2.
 */
&lpuart3 {
	status = "disabled";
};

/* PCIE (Mini Card) */
&pcieb {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcieb>;
	ext_osc = <1>;
	reset-gpio = <&gpio3 16 GPIO_ACTIVE_LOW>; /* PCIE_RESET_N */
	disable-gpio = <&gpio0 30 GPIO_ACTIVE_HIGH>; /* PCIE_DIS_N */
	status = "okay";
};

/* Audio support */
&asrc0 {
	status = "okay";
};

&sai0 {
	status = "okay";
};

&max98089 {
	status = "okay";
};

&sound_max98089 {
	status = "okay";
};

/*
 * Uncomment to enable MCA ADC channels on Expansion connector:
 *  - MCA_IO5 (channel 5)
 *  - MCA_IO6 (channel 6)
 *  - MCA_IO7 (channel 7)
 *  - MCA_IO8 (channel 8)
 *  - MCA_IO11 (channel 11)
 *  - MCA_IO12 (channel 12)
 * Edit adc-ch-list to include the ADC channels that you want to enable.
 */
// &mca_adc {
//	digi,adc-ch-list = <5 6 7 8 11 12>;
//	digi,adc-vref = <3000000>;
// };

/*
 * Uncomment to Enable Tamper detection. There are 2 digital (0 and 1) and 2
 * analog (2 and 3) tamper interfaces.
 */
//&mca_tamper {
//	digi,tamper-if-list = <0 1 2 3>;
//};

/*
 * Enable only if the parallel camera is physically connected.
 * If not, the MIPI camera may not work.
 * Similarly, if the MIPI camera is not physically connected you need to
 * disable the MIPI (mipi_csi_0) so that the parallel camera works.
 */
// &parallel_csi {
//        status = "okay";
// };

&ov5640 {
       status = "okay";
};

&mipi_csi_0 {
	status = "okay";
};

&ov5640_mipi {
	status = "okay";
};

/* USB_OTG1 */
&usbotg1 {
	/*
	 * To configure this USB controller as a device set dr_mode to "otg";
	 * to configure it as a host set to "host" instead.
	 */
	dr_mode = "host";
	status = "okay";
};

/* USB_OTG2/USB_SS3 */
&usbotg3 {
	status = "okay";
};

/* Micro SD card */
&usdhc2 {
	status = "okay";
};

&vpu_decoder {
	status = "okay";
};

&vpu_encoder {
	status = "okay";
};

/* IOMUX */
&iomuxc {
	/* PCIE (Mini Card) */
	pinctrl_pcieb: pcieagrp {
		fsl,pins = <
			/* PCIE_RESET_N */
			SC_P_QSPI0A_SCLK_LSIO_GPIO3_IO16	0x06000021
			/* PCIE_DIS_N */
			SC_P_SAI1_RXC_LSIO_GPIO0_IO30		0x06000021
			/* PCIE_WAKE_N */
			SC_P_SAI1_RXD_LSIO_GPIO0_IO29		0x06000021
		>;
	};
};
